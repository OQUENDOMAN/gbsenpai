#!/usr/bin/python3
from datetime import datetime
import glob
import os
import re
import sys

def append_header_comment(outf):
	print("// Automatically generated by bank_transformer.py", file=outf)
	print("// Date: %s" % (datetime.now().strftime("%Y/%m/%d %H:%M:%S")), file=outf)
	print("", file=outf)

# generate raw music banks
music_bank_ids = {}
inject_music_banks_path = os.path.join(sys.argv[-1], "inject_music_banks.h")
with open(inject_music_banks_path, "w") as outf:
	append_header_comment(outf)
	for fn in glob.glob(os.path.join(sys.argv[-2], "music_bank_*.c")):
		m = re.search(r"music_bank_([0-9]+)\.c$", fn)
		music_bank_id = int(m.group(1))
		music_bank_data = []
		reading_data = 0
		with open(fn, "r") as f:
			for line in f:
				line = line.strip()
				if reading_data == 1:
					# Read unsigned 8-bit chars
					for v in re.findall("[0-9]+", line):
						music_bank_data.append(int(v))
					reading_data = 0
				elif reading_data == 2:
					# Read unsigned 16-bit ints, hex format
					for v in re.findall("0x[0-9a-fA-F]+", line):
						iv = int(v[2:], 16)
						music_bank_data.append(iv & 0xFF)
						music_bank_data.append((iv >> 8) & 0xFF)
					reading_data = 0
				if line.startswith("const unsigned char "):
					reading_data = 1
				elif line.startswith("const unsigned int "):
					reading_data = 2
				pass
		print("const unsigned char music_bank_%d_joined[] = {" % music_bank_id, file=outf)
		print(",".join([str(x) for x in music_bank_data]), file=outf)
		print("};", file=outf)
		music_bank_ids[music_bank_id] = True
		print("Found music bank %d of size %d" % (music_bank_id, len(music_bank_data)))

# generate inject_get_bank.h
banks_path = os.path.join(sys.argv[-2], "banks.h")
inject_get_bank_path = os.path.join(sys.argv[-1], "inject_get_bank.h")
with open(banks_path, "r") as f:
	with open(inject_get_bank_path, "w") as outf:
		append_header_comment(outf)
		fs = f.read()
		for i in range(0, 512):
			if i in music_bank_ids:
				print(f"if (id == {i}) return music_bank_{i}_joined;", file=outf)
			elif f"bank_{i}_data[]" in fs:
				print(f"if (id == {i}) return bank_{i}_data;", file=outf)
